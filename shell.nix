{ sources ? import ./nix/sources.nix, compiler ? "ghc8102" }:
let
  pkgs = import sources.nixpkgs { };
  ghc = pkgs.haskell.packages.${compiler}.ghcWithPackages (ps: with ps; [
    HTTP
    JuicyPixels
    QuickCheck
    abstract-deque
    aeson
    aeson-pretty
    asn1-encoding
    asn1-parse
    asn1-types
    attoparsec
    attoparsec-iso8601
    basement
    blaze-html
    cassava
    citeproc
    commonmark
    commonmark-extensions
    commonmark-pandoc
    conduit
    conduit-extra
    connection
    criterion
    criterion-measurement
    cryptonite
    dense-linear-algebra
    doclayout
    doctemplates
    emojis
    errors
    haskell-language-server
    haskell-names
    haskell-src-exts
    hpack
    hslua
    hslua-module-system
    hslua-module-text
    http-api-data
    http-client
    http-client-tls
    http-media
    hxt
    hxt-charproperties
    hxt-regex-xmlschema
    hxt-unicode
    infer-license
    ipynb
    jira-wiki-markup
    libyaml
    megaparsec
    memory
    microlens-th
    microstache
    mime-types
    mmorph
    monad-par
    monad-par-extras
    mono-traversable
    mwc-random
    network
    network-uri
    optparse-applicative
    pandoc
    pandoc-types
    parser-combinators
    pem
    random
    resourcet
    rfc5051
    safe
    servant
    servant-client
    servant-client-core
    singleton-bool
    skylighting
    skylighting-core
    socks
    sop-core
    statistics
    streaming-commons
    string-conversions
    tagsoup
    temporary
    texmath
    text-conversions
    text-metrics
    text-short
    tls
    traverse-with-class
    typed-process
    unicode-transforms
    uniplate
    unliftio-core
    utf8-string
    uuid-types
    vault
    vector-algorithms
    vector-binary-instances
    vector-th-unbox
    x509
    x509-store
    x509-system
    x509-validation
    xml
    xml-conduit
    xml-types
    yaml
    zip-archive
    zlib
  ]);
in
pkgs.stdenv.mkDerivation {
  name = "advent-of-code-env";
  buildInputs = [ ghc pkgs.zlib pkgs.ormolu ];
}
